
@book{grenning_test-driven_2012,
	location = {Dallas, Tex.},
	edition = {Book version P2.0},
	title = {Test-driven development for Embedded C},
	isbn = {978-1-934356-62-3},
	series = {The pragmatic programmers},
	pagetotal = {326},
	publisher = {The Pragmatic Bookshelf},
	author = {Grenning, James W. and Carter, Jacquelyn},
	date = {2012},
	file = {Pragmatic Test Driven Development for Embedded C.pdf:/Users/evolentini/Zotero/storage/ZUVNFI6Y/Pragmatic Test Driven Development for Embedded C.pdf:application/pdf}
}

@inreference{noauthor_lenguaje_2020,
	title = {Lenguaje unificado de modelado},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Lenguaje_unificado_de_modelado&oldid=124532478},
	abstract = {El lenguaje unificado de modelado ({UML}, por sus siglas en inglés, Unified Modeling Language) es el lenguaje de modelado de sistemas de software más conocido y utilizado en la actualidad; está respaldado por el Object Management Group ({OMG}).
Es un lenguaje gráfico para visualizar, especificar, construir y documentar un sistema. {UML} ofrece un estándar para describir un "plano" del sistema (modelo), incluyendo aspectos conceptuales tales como procesos, funciones del sistema, y aspectos concretos como expresiones de lenguajes de programación, esquemas de bases de datos y compuestos reciclados.
Es importante remarcar que {UML} es un "lenguaje de modelado" para especificar o para describir métodos o procesos. Se utiliza para definir un sistema, para detallar los artefactos en el sistema y para documentar y construir. En otras palabras, es el lenguaje en el que está descrito el modelo.
Se puede aplicar en el desarrollo de software gran variedad de formas para dar soporte a una metodología de desarrollo de software (tal como el Proceso Unificado Racional, Rational Unified Process o {RUP}), pero no especifica en sí mismo qué metodología o proceso usar.
{UML} no puede compararse con la programación estructurada, pues {UML} significa Lenguaje Unificado de Modelado, no es programación, solo se diagrama la realidad de una utilización en un requerimiento. Mientras que programación estructurada es una forma de programar como lo es la orientación a objetos, la programación orientada a objetos viene siendo un complemento perfecto de {UML}, pero no por eso se toma {UML} solo para lenguajes orientados a objetos.
{UML} cuenta con varios tipos de diagramas, los cuales muestran diferentes aspectos de las entidades representadas.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-03-24},
	langid = {spanish},
	note = {Page Version {ID}: 124532478}
}

@inreference{noauthor_interfaz_2019,
	title = {Interfaz de programación de aplicaciones},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Interfaz_de_programaci%C3%B3n_de_aplicaciones&oldid=122204387},
	abstract = {La interfaz de programación de  aplicaciones, conocida también por la sigla {API}, en inglés, application programming interface,[1]​ es un conjunto de subrutinas, funciones y procedimientos (o métodos, en la programación orientada a objetos) que ofrece cierta biblioteca para ser utilizado por otro software como una capa de abstracción.[2]​
Son usadas generalmente en las bibliotecas de programación.[2]​},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-12-22},
	langid = {spanish},
	note = {Page Version {ID}: 122204387}
}

@inreference{noauthor_arbol-b_2019,
	title = {Árbol-B},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=%C3%81rbol-B&oldid=119251566},
	abstract = {En las ciencias de la computación, los árboles-B o B-árboles son estructuras de datos de árbol que se encuentran comúnmente en las implementaciones de bases de datos y sistemas de archivos. Al igual que los árboles binarios de búsqueda, son árboles balanceados de búsqueda, pero cada nodo puede poseer más de dos hijos.[1]​ Los árboles B mantienen los datos ordenados y las inserciones y eliminaciones se realizan en tiempo logarítmico amortizado.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-09-12},
	langid = {spanish},
	note = {Page Version {ID}: 119251566}
}

@online{jsonorg_introduccion_nodate,
	title = {Introducción a {JSON}},
	url = {https://www.json.org/json-en.html},
	author = {json.org},
	urldate = {2020-04-02},
	file = {JSON:/Users/evolentini/Zotero/storage/U5A8QG34/json-en.html:text/html}
}

@online{noauthor_control_nodate,
	title = {Control de acceso {TEBAS} 208NW},
	url = {https://articulo.mercadolibre.com.ar/MLA-782128833-control-acceso-pestillo-electrico-cerradura-puerta-kit-ls-_JM},
	abstract = {Compralo en Mercado Libre a \$ 4.068,78 - Comprá en 12 cuotas - Envío gratis. Encontrá más productos de Hogar, Muebles y Jardín, Seguridad para el Hogar, Cerraduras, Manuales.},
	urldate = {2020-04-02},
	langid = {spanish},
	file = {Snapshot:/Users/evolentini/Zotero/storage/N3W9R2TE/MLA-782128833-control-acceso-pestillo-electrico-cerradura-puerta-kit-ls-_JM.html:text/html}
}

@online{noauthor_control_nodate-1,
	title = {Control de acceso {ANVIZ} T5-Pro},
	url = {https://articulo.mercadolibre.com.ar/MLA-744676463-anviz-t5-pro-control-de-acceso-por-huella-anviz-t5pro-_JM},
	abstract = {Compralo en Mercado Libre a \$ 8.573,12 - Comprá en 12 cuotas - Envío gratis. Encontrá más productos de Industrias y Oficinas, Equipamiento para Oficinas, Insumos, Controladores de Asistencia.},
	urldate = {2020-04-02},
	langid = {spanish},
	file = {Snapshot:/Users/evolentini/Zotero/storage/QP6EZRSP/MLA-744676463-anviz-t5-pro-control-de-acceso-por-huella-anviz-t5pro-_JM.html:text/html}
}

@online{noauthor_control_nodate-2,
	title = {Control de acceso {ZK} {MA}300},
	url = {https://articulo.mercadolibre.com.ar/MLA-799230606-control-de-acceso-biometrico-zkteco-huella-tarjeta-personal-_JM},
	abstract = {Compralo en Mercado Libre a \$ 10.499,00 - Comprá en 12 cuotas - Envío gratis. Encontrá más productos de Industrias y Oficinas, Equipamiento para Oficinas, Insumos, Controladores de Asistencia.},
	urldate = {2020-04-02},
	langid = {spanish},
	file = {Snapshot:/Users/evolentini/Zotero/storage/8ZYDLWXI/MLA-799230606-control-de-acceso-biometrico-zkteco-huella-tarjeta-personal-_JM.html:text/html}
}

@online{equiser_sistema_nodate,
	title = {Sistema para control de Accesos {PUNKU}},
	url = {https://equiser.com.ar/punku/},
	author = {{EQUISER}},
	urldate = {2020-04-02},
	file = {Punku | Inicio:/Users/evolentini/Zotero/storage/86V6XJR6/punku.html:text/html}
}

@inreference{noauthor_nxp_2019,
	title = {{NXP} {ColdFire}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=NXP_ColdFire&oldid=917535671},
	abstract = {The {NXP} {ColdFire} is a microprocessor that derives from the Motorola 68000 family architecture, manufactured for embedded systems development by {NXP} Semiconductors. It was formerly manufactured by Freescale Semiconductor (formerly the semiconductor division of Motorola) which merged with {NXP} in 2015.},
	booktitle = {Wikipedia},
	urldate = {2020-04-02},
	date = {2019-09-24},
	langid = {english},
	note = {Page Version {ID}: 917535671}
}

@inreference{noauthor_esp32_2019,
	title = {{ESP}32},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=ESP32&oldid=122252080},
	abstract = {El {ESP}32 es una serie de microcontroladores de bajo costo y consumo de energía, con tecnología Wi-Fi y Bluetooth de modo dual integrada. El {ESP}32 emplea un microprocesador Tensilica Xtensa {LX}6 en sus variantes de simple y doble núcleo e incluye interruptores de antena, balun de radiofrecuencia, amplificador de potencia, amplificador receptor de bajo ruido, filtros, y módulos de administración de energía. El {ESP}32 fue creado y desarrollado por Espressif Systems, una compañía china basada en Shanghái, y es fabricado por {TSMC} utilizando su proceso de 40 nm.[1]​ Es un sucesor del microcontrolador {ESP}8266.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-12-24},
	langid = {spanish},
	note = {Page Version {ID}: 122252080}
}

@online{em_microelectronic_em4100_nodate,
	title = {{EM}4100 Datasheet},
	url = {https://www.digchip.com/datasheets/parts/datasheet/147/EM4100-pdf.php},
	author = {{EM} Microelectronic, Marine {SA}},
	urldate = {2020-04-02},
	file = {download_datasheet.pdf:/Users/evolentini/Zotero/storage/MWC3NMUS/download_datasheet.pdf:application/pdf}
}

@online{hid_global_corporation_hid_nodate,
	title = {{HID} Proximity, 125 {kHz} Cards and Readers},
	url = {https://www.hidglobal.com/sites/default/files/resource_files/hid-prox-br-en.pdf},
	author = {{HID} Global Corporation},
	urldate = {2020-04-02},
	file = {hid-prox-br-en.pdf:/Users/evolentini/Zotero/storage/RQF4IIU7/hid-prox-br-en.pdf:application/pdf}
}

@online{international_organization_for_standardization_iso_nodate,
	title = {{ISO} - {ISO}/{IEC} 14443-3:2011 - Contactless Identification cards},
	url = {https://www.iso.org/standard/50942.html},
	author = {International Organization for Standardization},
	urldate = {2020-04-02},
	file = {ISO - ISO/IEC 14443-3\:2011 - Identification cards — Contactless integrated circuit cards — Proximity cards — Part 3\: Initialization and anticollision:/Users/evolentini/Zotero/storage/4VJAUJ7D/50942.html:text/html}
}

@online{international_organization_for_standardization_isoiec_nodate,
	title = {{ISO}/{IEC} 18000-6:2010 Radio frequency identification for item management},
	url = {https://www.iso.org/cms/render/live/en/sites/isoorg/contents/data/standard/04/61/46149.html},
	shorttitle = {{ISO}/{IEC} 18000-6},
	abstract = {Information technology — Radio frequency identification for item management — Part 6: Parameters for air interface communications at 860 {MHz} to 960 {MHz}},
	titleaddon = {{ISO}},
	author = {{International Organization for Standardization}},
	urldate = {2020-04-02},
	langid = {english},
	note = {Library Catalog: www.iso.org},
	file = {Snapshot:/Users/evolentini/Zotero/storage/9VLTSQ4I/46149.html:text/html}
}

@inreference{noauthor_mifare_2019,
	title = {Mifare},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Mifare&oldid=118503303},
	abstract = {{MIFARE} es una tecnología de tarjetas inteligentes sin contacto ({TISC}), de las más ampliamente instaladas en el mundo, con aproximadamente 250 millones de {TISC} y 1,5 millones de módulos lectores vendidos. Es equivalente a las 3 primeras partes de la norma {ISO} 14443 Tipo A de 13.56 {MHz} con protocolo de alto nivel, con una distancia típica de lectura de 10 cm (unas 4 pulgadas). La distancia de lectura depende de la potencia del módulo lector, existiendo lectores de mayor y menor alcance.  Es propiedad de {NXP} Semiconductors (antes parte de Philips Semiconductors).},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-08-25},
	langid = {spanish},
	note = {Page Version {ID}: 118503303}
}

@online{profile_software_services_sl_aplicaciones_nodate,
	title = {Aplicaciones móviles híbridas: la solución más eficiente para el desarrollo multiplataforma},
	url = {https://profile.es/blog/aplicaciones-moviles-hibridas-la-solucion-mas-eficiente-para-el-desarrollo-multiplataforma/},
	author = {Profile Software Services, S.L.},
	urldate = {2020-04-02},
	file = {Aplicaciones móviles híbridas\: la solución más eficiente para el desarrollo multiplataforma – Consultoría y Servicios IT para empresas | Profile Software Services:/Users/evolentini/Zotero/storage/DR2IJEE7/aplicaciones-moviles-hibridas-la-solucion-mas-eficiente-para-el-desarrollo-multiplataforma.html:text/html}
}

@online{ionic_about_nodate,
	title = {About Ionic Cross-Platform Mobile Development Technologies},
	url = {https://ionicframework.com/about},
	author = {Ionic},
	urldate = {2020-04-02},
	file = {About Ionic Cross-Platform Mobile Development Technologies:/Users/evolentini/Zotero/storage/QXYIIPVG/about.html:text/html}
}

@inreference{noauthor_protocolo_2020,
	title = {Protocolo de transferencia de hipertexto},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Protocolo_de_transferencia_de_hipertexto&oldid=124562174},
	abstract = {El Protocolo de transferencia de hipertexto (en inglés, Hypertext Transfer Protocol, abreviado {HTTP}) es el protocolo de comunicación que permite las transferencias de información en la World Wide Web. {HTTP} fue desarrollado por el World Wide Web Consortium y la Internet Engineering Task Force, colaboración que culminó en 1999 con la publicación de una serie de {RFC}, siendo el más importante de ellos el {RFC} 2616 que especifica la versión 1.1. {HTTP} define la sintaxis y la semántica que utilizan los elementos de software de la arquitectura web (clientes, servidores, proxies) para comunicarse. 
{HTTP} es un protocolo sin estado, es decir, no guarda ninguna información sobre conexiones anteriores. El desarrollo de aplicaciones web necesita frecuentemente mantener estado. Para esto se usan las cookies, que es información que un servidor puede almacenar en el sistema cliente. Esto le permite a las aplicaciones web instituir la noción de sesión, y también permite rastrear usuarios ya que las cookies pueden guardarse en el cliente por tiempo indeterminado.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-03-25},
	langid = {spanish},
	note = {Page Version {ID}: 124562174}
}

@online{leach_hypertext_nodate,
	title = {Hypertext Transfer Protocol -- {HTTP}/1.1},
	url = {https://tools.ietf.org/html/rfc2616},
	author = {Leach, Paul J. and Berners-Lee, Tim and Mogul, Jeffrey C. and Masinter, Larry and Fielding, Roy T. and Gettys, James},
	urldate = {2020-04-02},
	langid = {english},
	note = {Library Catalog: tools.ietf.org},
	file = {Snapshot:/Users/evolentini/Zotero/storage/8MI2W7TJ/rfc2616.html:text/html}
}

@inreference{noauthor_transferencia_2019,
	title = {Transferencia de Estado Representacional},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Transferencia_de_Estado_Representacional&oldid=122090690},
	abstract = {La transferencia de estado representacional (en inglés representational state transfer) o {REST} es un estilo de arquitectura software para sistemas hipermedia distribuidos como la World Wide Web. El término se originó en el año 2000, en una tesis doctoral sobre la web escrita por Roy Fielding, uno de los principales autores de la especificación del protocolo {HTTP} y ha pasado a ser ampliamente utilizado por la comunidad de desarrollo.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-12-17},
	langid = {spanish},
	note = {Page Version {ID}: 122090690}
}

@inreference{noauthor_bluetooth_2020,
	title = {Bluetooth},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Bluetooth&oldid=124673929},
	abstract = {Bluetooth es una especificación industrial para redes inalámbricas de área personal ({WPAN}) creado por Bluetooth Special Interest Group, Inc. que posibilita la transmisión de voz y datos entre diferentes dispositivos mediante un enlace por radiofrecuencia en la banda {ISM} de los 2.4 {GHz}. Los principales objetivos que se pretenden conseguir con esta norma son:

Facilitar las comunicaciones entre equipos móviles.
Eliminar los cables y conectores entre estos.
Ofrecer la posibilidad de crear pequeñas redes inalámbricas y facilitar la sincronización de datos entre equipos personales.Los dispositivos que con mayor frecuencia utilizan esta tecnología pertenecen a sectores de las telecomunicaciones y la informática personal, como, teléfonos móviles, computadoras portátiles, computadoras personales, impresoras, altavoces inalámbricos o cámaras digitales.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-03-29},
	langid = {spanish},
	note = {Page Version {ID}: 124673929}
}

@inreference{noauthor_wifi_2020,
	title = {Wifi},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Wifi&oldid=124481217},
	abstract = {El wifi (escrito también wi fi)[1]​ es una tecnología que permite la interconexión inalámbrica de dispositivos electrónicos. Los dispositivos habilitados con wifi (tales como ordenadores personales, teléfonos, televisores, videoconsolas, reproductores de música...) pueden conectarse entre sí o a internet a través de un punto de acceso de red inalámbrica.
Wi-Fi es una marca de la Alianza Wi-Fi, la organización comercial que cumple con los estándares 802.11 relacionados con redes inalámbricas de área local. Su primera denominación fue, en inglés, Wireless Ethernet Compatibility Alliance.[2]​},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-03-22},
	langid = {spanish},
	note = {Page Version {ID}: 124481217}
}

@online{institute_of_electrical_and_electronics_engineers_830-1998_nodate,
	title = {830-1998 - {IEEE} Recommended Practice for Software Requirements Specifications},
	url = {https://standards.ieee.org/standard/830-1998.html},
	author = {Institute of Electrical \{and\} Electronics Engineers},
	urldate = {2020-04-02},
	file = {830-1998 - IEEE Recommended Practice for Software Requirements Specifications:/Users/evolentini/Zotero/storage/ZUUH8FW2/830-1998.html:text/html}
}

@online{menendez_especificacion_nodate,
	title = {Especificación de Requisitos según el estándar de {IEEE} 830},
	url = {https://www.fdi.ucm.es/profesor/gmendez/docs/is0809/ieee830.pdf},
	author = {Menendez, Gonzalo},
	urldate = {2020-04-02},
	file = {ieee830.pdf:/Users/evolentini/Zotero/storage/CNDBF9PI/ieee830.pdf:application/pdf}
}

@book{smart_bdd_2015,
	location = {Shelter Island, {NY}},
	title = {{BDD} in action: Behavior-Driven Development for the whole software lifecycle},
	isbn = {978-1-61729-165-4},
	shorttitle = {{BDD} in action},
	pagetotal = {353},
	publisher = {Manning Publications},
	author = {Smart, John Ferguson},
	date = {2015},
	langid = {english},
	note = {{OCLC}: ocn869265205},
	keywords = {Agile software development, Computer architecture, Computer software, Development, Object-oriented programming (Computer science)},
	file = {Smart - 2015 - BDD in action Behavior-Driven Development for the.pdf:/Users/evolentini/Zotero/storage/6GARNLHF/Smart - 2015 - BDD in action Behavior-Driven Development for the.pdf:application/pdf}
}

@inreference{noauthor_hardware_2020,
	title = {Hardware abstraction},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Hardware_abstraction&oldid=944998580},
	abstract = {Hardware abstractions are sets of routines in software that provide programs with access to hardware resources through programming interfaces. The programming interface allows all devices in a particular class C of hardware devices to be accessed through identical interfaces even though C may contain different subclasses of devices that each provide a different hardware interface.
Hardware abstractions often allow programmers to write device-independent, high performance applications by providing standard operating system ({OS}) calls to hardware.  The process of abstracting pieces of hardware is often done from the perspective of a {CPU}.  Each type of {CPU} has a specific instruction set architecture or {ISA}.  The {ISA} represents the primitive operations of the machine that are available for use by assembly programmers and compiler writers.  One of the main functions of a compiler is to allow a programmer to write an algorithm in a high-level language without having to care about {CPU}-specific instructions.  Then it is the job of the compiler to generate a {CPU}-specific executable.  The same type of abstraction is made in operating systems, but {OS} {APIs} now represent the primitive operations of the machine, rather than an {ISA}.  This allows a programmer to use {OS}-level operations (e.g. task creation/deletion) in their programs while retaining portability over a variety of different platforms.},
	booktitle = {Wikipedia},
	urldate = {2020-04-02},
	date = {2020-03-11},
	langid = {english},
	note = {Page Version {ID}: 944998580}
}

@inreference{noauthor_transaccion_2019,
	title = {Transacción (informática)},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Transacci%C3%B3n_(inform%C3%A1tica)&oldid=117849480},
	abstract = {Una transacción es una interacción con una estructura de datos compleja, compuesta por varios procesos que se han de aplicar uno después del otro. La transacción debe realizarse de una sola vez y sin que la estructura a medio manipular pueda ser alcanzada por el resto del sistema hasta que se hayan finalizado todos sus procesos.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-07-30},
	langid = {spanish},
	note = {Page Version {ID}: 117849480}
}

@inreference{noauthor_acid_2019,
	title = {{ACID}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=ACID&oldid=122122178},
	abstract = {En bases de datos se denomina {ACID} a las características de los parámetros que permiten clasificar las transacciones de los sistemas de gestión de bases de datos. Cuando se dice que es {ACID} compliant se indica -en diversos grados- que éste permite realizar transacciones.
En concreto {ACID} es un acrónimo de Atomicity, Consistency, Isolation and Durability: Atomicidad, Consistencia, Aislamiento y Durabilidad en español.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-12-18},
	langid = {spanish},
	note = {Page Version {ID}: 122122178}
}

@inreference{noauthor_diagrama_2019,
	title = {Diagrama de secuencia},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Diagrama_de_secuencia&oldid=119894705},
	abstract = {El diagrama de secuencia es un tipo de diagrama usado para modelar interacción entre objetos en un sistema según {UML}. En inglés se pueden encontrar como "sequence diagram", "event-trace diagrams".},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-10-02},
	langid = {spanish},
	note = {Page Version {ID}: 119894705}
}

@online{noauthor_uml_2012,
	title = {{UML} Diagram Types {\textbar} Learn About All 14 Types of {UML} Diagrams},
	url = {https://creately.com/blog/diagrams/uml-diagram-types-examples/},
	abstract = {Get to know all 14 {UML} diagram types with the help of examples. The guide includes images for all types of {UML} diagrams so you can quickly identify them.},
	titleaddon = {Creately Blog},
	urldate = {2020-04-02},
	date = {2012-02-01},
	langid = {american},
	note = {Library Catalog: creately.com
Section: diagrams}
}

@inreference{noauthor_rfid_2020,
	title = {{RFID}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=RFID&oldid=124378237},
	abstract = {{RFID} o  identificación por radiofrecuencia (del inglés Radio Frequency Identification) es un sistema de almacenamiento y recuperación de datos remoto que usa dispositivos denominados etiquetas, tarjetas o transpondedores {RFID}. El propósito fundamental de la tecnología {RFID} es transmitir la identidad de un objeto (similar a un número de serie único) mediante ondas de radio. Las tecnologías {RFID} se agrupan dentro de las denominadas Auto {ID} (automatic identification, o identificación automática).
Las etiquetas {RFID} ({RFID} tag en inglés) son unos dispositivos pequeños, similares a una pegatina, que pueden ser adheridas o incorporadas a un producto, un animal o una persona. Contienen antenas para permitirles recibir y responder a peticiones por radiofrecuencia desde un emisor-receptor {RFID}. Las etiquetas pasivas no necesitan alimentación eléctrica interna, mientras que las activas sí lo requieren.[1]​ Una de las ventajas del uso de radiofrecuencia (en lugar, por ejemplo, de  infrarrojos) es que no se requiere visión directa entre emisor y receptor.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-03-19},
	langid = {spanish},
	note = {Page Version {ID}: 124378237}
}

@online{noauthor_ceedling_nodate,
	title = {Ceedling},
	url = {http://www.throwtheswitch.org/ceedling},
	titleaddon = {Throw The Switch},
	urldate = {2020-04-02},
	langid = {american},
	note = {Library Catalog: www.throwtheswitch.org},
	file = {Snapshot:/Users/evolentini/Zotero/storage/5PNQF8BI/ceedling.html:text/html}
}

@software{noauthor_throwtheswitchceedling_2020,
	title = {{ThrowTheSwitch}/Ceedling},
	url = {https://github.com/ThrowTheSwitch/Ceedling},
	abstract = {Ruby/Rake-based build and test system for C projects},
	publisher = {Throw The Switch},
	urldate = {2020-04-02},
	date = {2020-03-23},
	note = {original-date: 2012-01-26T19:53:53Z}
}

@online{noauthor_doxygen_nodate,
	title = {Doxygen: Main Page},
	url = {http://www.doxygen.nl/},
	urldate = {2020-04-02},
	file = {Doxygen\: Main Page:/Users/evolentini/Zotero/storage/JPTWDCZY/www.doxygen.nl.html:text/html}
}

@inreference{noauthor_markdown_2020,
	title = {Markdown},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Markdown&oldid=124595693},
	abstract = {Markdown es un lenguaje de marcado ligero creado por John Gruber que trata de conseguir la máxima legibilidad y facilidad de publicación tanto en su forma de entrada como de salida, inspirándose en muchas convenciones existentes para marcar mensajes de correo electrónico usando texto plano. Se distribuye bajo licencia {BSD} y se distribuye como plugin (o al menos está disponible) en diferentes sistemas de gestión de contenidos ({CMS}). Markdown convierte el texto marcado en documentos {XHTML} utilizando html2text creado por Aaron Swartz. Markdown fue implementado originariamente en Perl por Gruber, pero desde entonces ha sido traducido a multitud de lenguajes de programación, incluyendo {PHP}, Python, Ruby, Java y Common Lisp.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-03-27},
	langid = {spanish},
	note = {Page Version {ID}: 124595693},
	file = {Snapshot:/Users/evolentini/Zotero/storage/YV5JV3SV/index.html:text/html}
}

@online{noauthor_herramienta_nodate,
	title = {herramienta de código abierto que utiliza descripciones textuales simples para dibujar diagramas {UML}.},
	url = {https://plantuml.com/es/},
	urldate = {2020-04-02},
	file = {herramienta de código abierto que utiliza descripciones textuales simples para dibujar diagramas UML.:/Users/evolentini/Zotero/storage/D25GW8ZS/es.html:text/html}
}

@online{noauthor_esp-idf_nodate,
	title = {{ESP}-{IDF} Programming Guide latest documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/latest/esp32/},
	urldate = {2020-04-02},
	file = {ESP-IDF Programming Guide esp32 — ESP-IDF Programming Guide latest documentation:/Users/evolentini/Zotero/storage/K36FXXXG/esp32.html:text/html}
}

@software{noauthor_electronvectorfake_function_framework_2020,
	title = {{ElectronVector}/fake\_function\_framework},
	rights = {{MIT}},
	url = {https://github.com/ElectronVector/fake_function_framework},
	abstract = {A plug-in for Ceedling to use the Fake Function Framework (fff) for mocking instead of Cmock.},
	publisher = {{ElectronVector}},
	urldate = {2020-04-02},
	date = {2020-02-18},
	note = {original-date: 2016-05-23T04:19:44Z}
}

@inreference{noauthor_gcov_2019,
	title = {Gcov},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Gcov&oldid=919359198},
	abstract = {Gcov is a source code coverage analysis and statement-by-statement profiling tool. Gcov generates exact counts of the number of times each statement in a program is executed and annotates source code to add instrumentation. Gcov comes as a standard utility with the {GNU} Compiler Collection ({GCC}) suite.The gcov utility gives information on how often a program executes segments of code. It produces a copy of the source file, annotated with execution frequencies. The gcov utility does not produce any time-based data and works only on code compiled with the {GCC} suite. The manual claims it is not compatible with any other profiling or test coverage mechanism, but it works with llvm-generated files, too.},
	booktitle = {Wikipedia},
	urldate = {2020-04-02},
	date = {2019-10-03},
	langid = {english},
	note = {Page Version {ID}: 919359198},
	file = {Snapshot:/Users/evolentini/Zotero/storage/63R3N9SH/index.html:text/html}
}

@software{long_meekrosoftfff_2020,
	title = {meekrosoft/fff},
	url = {https://github.com/meekrosoft/fff},
	abstract = {A testing micro framework for creating function test doubles},
	author = {Long, Mike},
	urldate = {2020-04-02},
	date = {2020-03-30},
	note = {original-date: 2010-12-14T15:16:42Z},
	keywords = {c, c-plus-plus, embedded, fake-functions, micro-framework, tdd}
}

@software{noauthor_espressifesp-idf_2020,
	title = {espressif/esp-idf},
	rights = {Apache-2.0},
	url = {https://github.com/espressif/esp-idf},
	abstract = {Espressif {IoT} Development Framework. Official development framework for {ESP}32.},
	publisher = {Espressif Systems},
	urldate = {2020-04-02},
	date = {2020-04-01},
	note = {original-date: 2016-08-17T10:40:35Z}
}

@software{aldanial_aldanialcloc_2020,
	title = {{AlDanial}/cloc},
	rights = {{GPL}-2.0},
	url = {https://github.com/AlDanial/cloc},
	abstract = {cloc counts blank lines, comment lines, and physical lines of source code in many programming languages.},
	author = {{AlDanial}},
	urldate = {2020-04-02},
	date = {2020-04-01},
	note = {original-date: 2015-09-07T03:30:43Z},
	keywords = {cloc, count-lines, programming-language}
}

@software{noauthor_throwtheswitchunity_2020,
	title = {{ThrowTheSwitch}/Unity},
	rights = {{MIT}},
	url = {https://github.com/ThrowTheSwitch/Unity},
	abstract = {Simple Unit Testing for C. Contribute to {ThrowTheSwitch}/Unity development by creating an account on {GitHub}.},
	publisher = {Throw The Switch},
	urldate = {2020-04-02},
	date = {2020-04-01},
	note = {original-date: 2012-01-26T19:52:36Z}
}

@online{noauthor_esp-idf_nodate-1,
	title = {{ESP}-{IDF} {FreeRTOS} Changes for {ESP}32},
	url = {https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/freertos-smp.html},
	urldate = {2020-04-02},
	file = {ESP-IDF FreeRTOS SMP Changes esp32 — ESP-IDF Programming Guide latest documentation:/Users/evolentini/Zotero/storage/E28BT6MR/freertos-smp.html:text/html}
}

@inreference{noauthor_freertos_2019,
	title = {{FreeRTOS}},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=FreeRTOS&oldid=120184821},
	abstract = {{FreeRTOS} Es un sistema operativo de tiempo real kernel para dispositivos embebidos que ha sido portado a 35 plataformas de microcontrolador.[2]​[3]​[4]​ Está distribuido bajo el {MIT} Licencia.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2019-10-11},
	langid = {spanish},
	note = {Page Version {ID}: 120184821},
	file = {Snapshot:/Users/evolentini/Zotero/storage/AHPKNR8R/index.html:text/html}
}

@online{freertos_freertos_nodate,
	title = {{FreeRTOS} Reference Manual V10.0.0},
	url = {https://www.freertos.org/wp-content/uploads/2018/07/FreeRTOS_Reference_Manual_V10.0.0.pdf},
	author = {{FreeRTOS}},
	urldate = {2020-04-02},
	file = {FreeRTOS_Reference_Manual_V10.0.0.pdf:/Users/evolentini/Zotero/storage/QRTG6SUQ/FreeRTOS_Reference_Manual_V10.0.0.pdf:application/pdf}
}

@online{noauthor_freertos_nodate,
	title = {{FreeRTOS} simulator for Posix/Linux},
	url = {/FreeRTOS-simulator-for-Linux.html},
	abstract = {{FreeRTOS} is a portable, open source, mini Real Time kernel. A free {RTOS} for small embedded systems},
	titleaddon = {{FreeRTOS}},
	urldate = {2020-04-02},
	langid = {american},
	note = {Library Catalog: www.freertos.org},
	file = {Snapshot:/Users/evolentini/Zotero/storage/VBPKIKJA/FreeRTOS-simulator-for-Linux.html:text/html}
}

@online{noauthor_freertos_nodate-1,
	title = {{FreeRTOS} esp32 — {ESP}-{IDF} Programming Guide latest documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/freertos.html},
	urldate = {2020-04-02},
	file = {FreeRTOS esp32 — ESP-IDF Programming Guide latest documentation:/Users/evolentini/Zotero/storage/5Z9FD3K9/freertos.html:text/html}
}

@inreference{noauthor_tipo_2020,
	title = {Tipo de dato abstracto},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://es.wikipedia.org/w/index.php?title=Tipo_de_dato_abstracto&oldid=123695779},
	abstract = {Un tipo de dato abstracto ({TDA}) o tipo abstracto de datos ({TAD}) es un modelo matemático compuesto por una colección de operaciones definidas sobre un conjunto de datos para el modelo.},
	booktitle = {Wikipedia, la enciclopedia libre},
	urldate = {2020-04-02},
	date = {2020-02-20},
	langid = {spanish},
	note = {Page Version {ID}: 123695779},
	file = {Snapshot:/Users/evolentini/Zotero/storage/99EWQZ7U/index.html:text/html}
}

@online{noauthor_esp32-devkitc_nodate,
	title = {{ESP}32-{DevKitC} V4 Getting Started},
	url = {https://docs.espressif.com/projects/esp-idf/en/latest/esp32/hw-reference/esp32/get-started-devkitc.html},
	urldate = {2020-04-02},
	file = {ESP32-DevKitC V4 Getting Started Guide esp32 — ESP-IDF Programming Guide latest documentation:/Users/evolentini/Zotero/storage/G4LC4WLB/get-started-devkitc.html:text/html}
}

@online{noauthor_mcp7940n_nodate,
	title = {{MCP}7940N - Real-Time Clock - Real-Time Clock/Calendar},
	url = {https://www.microchip.com/wwwproducts/en/MCP7940N},
	urldate = {2020-04-02},
	file = {MCP7940N - Real-Time Clock - Real-Time Clock/Calendar:/Users/evolentini/Zotero/storage/EASQ3RL7/MCP7940N.html:text/html}
}